<?php

namespace Cliente\Entity\Repository;

use Cliente\Entity\ClienteCaracteristicaEntity;
use Doctrine\ORM\EntityRepository;
use Zend\Stdlib\Hydrator;

/**
 * ClienteCaracteristicaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClienteCaracteristicaRepository extends EntityRepository
{
    public function inserirClienteCaracteristica($param = array()) {
        $entity = new ClienteCaracteristicaEntity($param);
        
        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();

        return $entity;
    }
    
    public function editarClienteCaracteristica($param = array()) {
        $entity = $this->getEntityManager()->getReference('Cliente\Entity\ClienteCaracteristicaEntity', $param['idCliente']);
        (new Hydrator\ClassMethods())->hydrate($param, $entity);
        
        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();

        return $entity;
    }
    
    public function selecionarClienteCaracteristicaBy($param) {
        $repository = $this->findBy($param);
        return $repository;
    }
    
    public function desativarClienteCaracteristica($idCliente, $tpCaracteristica) {
//        $queryuilder = $this->getEntityManager()->createQueryBuilder();
//        $queryuilder->select(array('a'))
//                ->from('\Cliente\Entity\ClienteCaracteristicaEntity', 'a')
//                ->join('a.idCaracteristica', 'b')
//                ->andWhere('a.idCliente = :idCliente')
//                ->setParameter('idCliente', $idCliente)
//                ->andWhere('b.tpCaracteristica = :tpCaracteristica')
//                ->setParameter('tpCaracteristica', $tpCaracteristica);
//        $result = $queryuilder->getQuery()->getArrayResult();
//        
//        echo '<pre/>';
//        print_r($result);
//        die();
        
        $qb = $this->getEntityManager()->createQueryBuilder();
        $query = $qb->select(array('a'))
                ->from('\Cliente\Entity\ClienteCaracteristicaEntity', 'a')
                ->join('a.idCaracteristica', 'b')
                ->andWhere('a.idCliente = :idCliente')
                ->setParameter('idCliente', $idCliente)
                ->andWhere('b.tpCaracteristica = :tpCaracteristica')
                ->setParameter('tpCaracteristica', $tpCaracteristica)
                ->getQuery();
        $results = $query->execute();
        foreach ($results as $result) {
            $this->getEntityManager()->remove($result);
        }
        $this->getEntityManager()->flush();
    }
    
}