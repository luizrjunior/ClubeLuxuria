<?php

namespace Anunciante\Entity\Repository;

use Anunciante\Entity\AnuncianteEntity;
use Doctrine\ORM\EntityRepository;
use DoctrineORMModule\Paginator\Adapter\DoctrinePaginator as DoctrineAdapter;
use Doctrine\ORM\Tools\Pagination\Paginator as ORMPaginator;
use Zend\Paginator\Paginator;
use Zend\Stdlib\Hydrator;

/**
 * AnuncianteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnuncianteRepository extends EntityRepository {

    public function verificarNomeArtisticoExistente($param) {
        $Anunciante = $this->createQueryBuilder('a')
                        ->where('a.noArtistico LIKE :noArtistico')
                        ->setParameter('noArtistico', $param['noArtistico'])->getQuery()->getOneOrNullResult();
        if (!is_null($Anunciante)) {
            if ($param['idAnunciante'] != $Anunciante->getIdAnunciante()) {
                return $Anunciante;
            }
        }
        return false;
    }

    public function pegarNomeAnuncianteCliente($idCliente) {
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array('a.noArtistico'));
        $query->from('Anunciante\Entity\AnuncianteEntity', 'a');
        $query->innerJoin('a.idCliente', 'b');
        $query->where("a.idCliente = :idCliente")
                ->setParameter('idCliente', $idCliente);
        $query->addOrderBy('a.idAnunciante', 'DESC');
        $noArtistico = $query->getQuery()->getResult();
        return $noArtistico[0];
    }

    public function inserirAnunciante($param = array()) {
        $entity = new AnuncianteEntity($param);

        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();

        return $entity;
    }

    public function editarAnunciante($param = array()) {
        $entity = $this->getEntityManager()->getReference('Anunciante\Entity\AnuncianteEntity', $param['idAnunciante']);
        (new Hydrator\ClassMethods())->hydrate($param, $entity);

        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();
        
        return $entity;
    }

    public function selecionarAnuncianteBy($param) {
        $repository = $this->findBy($param);
        return $repository;
    }

    public function listarAnunciantesPaginado($param = array(), $pagina = 1, $itens = 10) {
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array(
            'a.idAnunciante', 'a.stAnunciante', 'a.noArtistico', 'a.nuTelefone', 
            'a.tpCabeloCor', 'a.stAceitaCartao', 'a.nuLatitude', 'a.nuLongitude', 
            'b.idCliente', 'b.dtVencimento', 'b.dtHrCadastro', 'c.noCidade', 'c.sgUf'));
        $query->from('Anunciante\Entity\AnuncianteEntity', 'a');
        $query->innerJoin('a.idCliente', 'b');
        $query->innerJoin('a.idCidade', 'c');
        $query->andWhere("b.stCliente = :stCliente")
                ->setParameter('stCliente', 1);
        if (!empty($param['noArtisticoPsq'])) {
            $query->andWhere("a.noArtistico LIKE :noArtistico")
                    ->setParameter('noArtistico', "{$param['noArtisticoPsq']}%");
        }
        if ($param['dtVencimentoPsq'] != "") {
        $query->andWhere('b.dtVencimento >= :dtVencimento')
            ->setParameter('dtVencimento', \DateTime::createFromFormat('d/m/Y', $param['dtVencimentoPsq']));
        }
        if ($param['tpAnunciantePsq'] != "T") {
        $query->andWhere("a.tpAnunciante = :tpAnunciante")
                ->setParameter('tpAnunciante', $param['tpAnunciantePsq']);
        }
        if ($param['stAnunciantePsq'] != "T") {
        $query->andWhere("a.stAnunciante = :stAnunciante")
                ->setParameter('stAnunciante', $param['stAnunciantePsq']);
        }
        if ($param['sgUfPsq'] != "") {
            $query->andWhere("c.sgUf = :sgUf")
                    ->setParameter('sgUf', $param['sgUfPsq']);
        }
        if ($param['idCidadePsq'] != "") {
            $query->andWhere("a.idCidade = :idCidade")
                    ->setParameter('idCidade', "{$param['idCidadePsq']}%");
        }
        $query->addOrderBy('a.idAnunciante', 'DESC');
        
        $paginado = new ORMPaginator($query->getQuery());
        $paginado->setUseOutputWalkers(FALSE);

        $adapter = new DoctrineAdapter($paginado);

        $paginator = new Paginator($adapter);
        $paginator->setDefaultItemCountPerPage($itens);
        $paginator->setCurrentPageNumber($pagina);

        return $paginator;
    }

    public function listarAnunciantesHome($param) {
        $data = date('d/m/Y');
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array(
            'a.idAnunciante', 'a.stAnunciante', 'a.noArtistico', 'a.nuTelefone', 
            'a.tpCabeloCor', 'a.stAceitaCartao', 'a.nuLatitude', 'a.nuLongitude', 
            'b.idCliente', 'c.noCidade', 'c.sgUf'));
        $query->from('Anunciante\Entity\AnuncianteEntity', 'a');
        $query->innerJoin('a.idCliente', 'b');
        $query->innerJoin('a.idCidade', 'c');
        $query->andWhere("b.stCliente = :stCliente")
                ->setParameter('stCliente', 1);
        $query->andWhere('b.dtVencimento >= :dtVencimentoPsq')
            ->setParameter('dtVencimentoPsq', \DateTime::createFromFormat('d/m/Y', $data));
        $query->andWhere("a.tpAnunciante = :tpAnunciante")
                ->setParameter('tpAnunciante', $param['tpAnunciantePsq']);
        $query->andWhere("a.stAnunciante IN (:stAnunciante)")
                ->setParameter('stAnunciante', $param['stAnunciantePsq']);
        if ($param['sgUfPsq'] != "") {
            $query->andWhere("c.sgUf = :sgUf")
                    ->setParameter('sgUf', $param['sgUfPsq']);
        }
        if ($param['idCidadePsq'] != "") {
            $query->andWhere("a.idCidade = :idCidade")
                    ->setParameter('idCidade', "{$param['idCidadePsq']}%");
        }
        $minutos = date("i");
        if ($minutos >= 1 && $minutos <= 15) {
            $query->addOrderBy('a.noArtistico', 'ASC');
        } elseif ($minutos >= 16 && $minutos <= 30) {
            $query->addOrderBy('a.noArtistico', 'DESC');
        } elseif ($minutos >= 31 && $minutos <= 45) {
            $query->addOrderBy('a.idAnunciante', 'ASC');
        } elseif ($minutos >= 46) {
            $query->addOrderBy('a.idAnunciante', 'DESC');
        }
        $listaAnunciantes = $query->getQuery()->getResult();
        return $listaAnunciantes;
    }

    public function listarAnunciantesHomePaginado($param, $pagina = 1, $itens = 10) {
        $data = date('d/m/Y');
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array(
            'a.idAnunciante', 'a.stAnunciante', 'a.noArtistico', 'a.nuTelefone', 
            'a.tpCabeloCor', 'a.stAceitaCartao', 'a.nuLatitude', 'a.nuLongitude', 
            'b.idCliente', 'c.noCidade', 'c.sgUf'));
        $query->from('Anunciante\Entity\AnuncianteEntity', 'a');
        $query->innerJoin('a.idCliente', 'b');
        $query->innerJoin('a.idCidade', 'c');
        $query->andWhere("b.stCliente = :stCliente")
                ->setParameter('stCliente', 1);
        $query->andWhere('b.dtVencimento >= :dtVencimentoPsq')
            ->setParameter('dtVencimentoPsq', \DateTime::createFromFormat('d/m/Y', $data));
        $query->andWhere("a.tpAnunciante = :tpAnunciante")
                ->setParameter('tpAnunciante', $param['tpAnunciantePsq']);
        $query->andWhere("a.stAnunciante IN (:stAnunciante)")
                ->setParameter('stAnunciante', $param['stAnunciantePsq']);
        if ($param['sgUfPsq'] != "") {
            $query->andWhere("c.sgUf = :sgUf")
                    ->setParameter('sgUf', $param['sgUfPsq']);
        }
        if ($param['idCidadePsq'] != "") {
            $query->andWhere("a.idCidade = :idCidade")
                    ->setParameter('idCidade', "{$param['idCidadePsq']}%");
        }
        $minutos = date("i");
        if ($minutos >= 1 && $minutos <= 15) {
            $query->addOrderBy('a.noArtistico', 'ASC');
        } elseif ($minutos >= 16 && $minutos <= 30) {
            $query->addOrderBy('a.noArtistico', 'DESC');
        } elseif ($minutos >= 31 && $minutos <= 45) {
            $query->addOrderBy('a.idAnunciante', 'ASC');
        } elseif ($minutos >= 46) {
            $query->addOrderBy('a.idAnunciante', 'DESC');
        }
        
        $paginado = new ORMPaginator($query->getQuery());
        $paginado->setUseOutputWalkers(FALSE);

        $adapter = new DoctrineAdapter($paginado);

        $paginator = new Paginator($adapter);
        $paginator->setDefaultItemCountPerPage($itens);
        $paginator->setCurrentPageNumber($pagina);

        return $paginator;
    }

    public function listarAnunciantesNovidades($param) {
        $data = date('d/m/Y');
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array('a.idAnunciante', 'a.stAnunciante', 'a.noArtistico', 'a.nuTelefone',
            'b.idCliente', 'c.noCidade', 'c.sgUf'));
        $query->from('Anunciante\Entity\AnuncianteEntity', 'a');
        $query->innerJoin('a.idCliente', 'b');
        $query->innerJoin('a.idCidade', 'c');
        $query->andWhere("a.tpAnunciante = :tpAnunciante")
                ->setParameter('tpAnunciante', $param['tpAnunciantePsq']);
        $query->andWhere("a.stAnunciante IN (:stAnunciante)")
                ->setParameter('stAnunciante', $param['stAnunciantePsq']);
        if ($param['sgUfPsq'] != "") {
            $query->andWhere("b.sgUf = :sgUf")
                    ->setParameter('sgUf', $param['sgUfPsq']);
        }
        if ($param['idCidadePsq'] != "") {
            $query->andWhere("a.idCidade = :idCidade")
                    ->setParameter('idCidade', "{$param['idCidadePsq']}%");
        }
        $query->andWhere("b.stCliente = :stCliente")
                ->setParameter('stCliente', 1);
        $query->andWhere('b.dtVencimento >= :dtVencimentoPsq')
            ->setParameter('dtVencimentoPsq', \DateTime::createFromFormat('d/m/Y', $data));
        $query->addOrderBy('a.dtAlteracao', 'DESC')->setMaxResults(10);
        $listaAnunciantesNovidades = $query->getQuery()->getResult();
        return $listaAnunciantesNovidades;
    }

    public function listarAnunciantesDestaques($param) {
        $data = date('d/m/Y');
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array('a.idAnunciante', 'a.stAnunciante', 'a.noArtistico', 'a.nuTelefone',
            'b.idCliente', 'c.noCidade', 'c.sgUf'));
        $query->from('Anunciante\Entity\AnuncianteEntity', 'a');
        $query->innerJoin('a.idCliente', 'b');
        $query->innerJoin('a.idCidade', 'c');
        $query->andWhere("a.tpAnunciante = :tpAnunciante")
                ->setParameter('tpAnunciante', $param['tpAnunciantePsq']);
        $query->andWhere("a.stAnunciante IN (:stAnunciante)")
                ->setParameter('stAnunciante', $param['stAnunciantePsq']);
        $query->andWhere("a.stDestaque = :stDestaque")
                ->setParameter('stDestaque', 1);
        $query->andWhere('a.dtInicioDestaque >= :dtInicioPsq')
            ->setParameter('dtInicioPsq', \DateTime::createFromFormat('d/m/Y', $data));
        $query->andWhere('a.dtFimDestaque <= :dtFimPsq')
            ->setParameter('dtFimPsq', \DateTime::createFromFormat('d/m/Y', $data));
        if ($param['sgUfPsq'] != "") {
            $query->andWhere("b.sgUf = :sgUf")
                    ->setParameter('sgUf', $param['sgUfPsq']);
        }
        if ($param['idCidadePsq'] != "") {
            $query->andWhere("a.idCidade = :idCidade")
                    ->setParameter('idCidade', "{$param['idCidadePsq']}%");
        }
        $query->andWhere("b.stCliente = :stCliente")
                ->setParameter('stCliente', 1);
        $query->andWhere('b.dtVencimento >= :dtVencimentoPsq')
            ->setParameter('dtVencimentoPsq', \DateTime::createFromFormat('d/m/Y', $data));
        $minutos = date("i");
        if ($minutos >= 1 && $minutos <= 15) {
            $query->addOrderBy('a.noArtistico', 'ASC');
        } elseif ($minutos >= 16 && $minutos <= 30) {
            $query->addOrderBy('a.noArtistico', 'DESC');
        } elseif ($minutos >= 31 && $minutos <= 45) {
            $query->addOrderBy('a.idAnunciante', 'ASC');
        } elseif ($minutos >= 46) {
            $query->addOrderBy('a.idAnunciante', 'DESC');
        }
        $query->setMaxResults(10);
        $listaAnunciantesDestaques = $query->getQuery()->getResult();
        return $listaAnunciantesDestaques;
    }

}