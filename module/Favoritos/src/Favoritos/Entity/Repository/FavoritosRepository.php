<?php

namespace Favoritos\Entity\Repository;

use Favoritos\Entity\FavoritosEntity;
use Doctrine\ORM\EntityRepository;
use Zend\Stdlib\Hydrator;

/**
 * FavoritosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FavoritosRepository extends EntityRepository {

    public function selecionarFavoritos($id) {
        $repository = $this->find($id);
        return $repository;
    }

    public function selecionarFavoritosBy($param) {
        $repository = $this->findBy($param);
        return $repository;
    }

    public function inserirFavoritos($param = array()) {
        $entity = new FavoritosEntity($param);
        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();
        return $entity;
    }

    public function editarFavoritos($param = array()) {
        $entity = $this->getEntityManager()->getReference('Favoritos\Entity\FavoritosEntity', $param['idFavoritos']);
        (new Hydrator\ClassMethods())->hydrate($param, $entity);
        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();
        return $entity;
    }

    public function excluirFavoritos($repository) {
        $this->getEntityManager()->remove($repository);
        $this->getEntityManager()->flush();
        return $repository;
    }
    
    public function listarAnunciantesFavoritos($idUsuario) {
        $queryCreate = $this->criarConsultaAnunciantesFavoritos($idUsuario);
        $listaClientes = $queryCreate->getQuery()->getResult();
        return $listaClientes;
    }
    
    private function criarConsultaAnunciantesFavoritos($idUsuario) {
        $data = date('d/m/Y');
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array('a.idFavoritos', 'a.stNotificacao', 
            'b.idAnunciante', 'b.stAnunciante', 'b.noArtistico', 'b.nuTelefone',
            'e.idCliente', 'd.noCidade', 'd.sgUf'))
            ->from('Favoritos\Entity\FavoritosEntity', 'a')
            ->innerJoin('a.idAnunciante', 'b')
            ->innerJoin('a.idUsuario', 'c');
        $query->innerJoin('b.idCidade', 'd');
        $query->innerJoin('b.idCliente', 'e');
        $query->andWhere("a.idUsuario = :idUsuarioPsq")
                ->setParameter('idUsuarioPsq', $idUsuario);
        $query->andWhere('e.dtVencimento >= :dtVencimentoPsq')
            ->setParameter('dtVencimentoPsq', \DateTime::createFromFormat('d/m/Y', $data));
        $query->addOrderBy('a.idFavoritos', 'DESC');
        return $query;
    }

}